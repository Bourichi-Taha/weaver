name: Build and Save to repo

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install essential utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn install

      - name: Prebuild app
        run: npx expo prebuild

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/android-sdk
          key: ${{ runner.os }}-android-sdk

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v3.2.1

      - name: Grant execution permissions for Gradle wrapper
        run: sudo chmod +x ./android/gradlew

      - name: Create gradlew wrapper script
        run: |
          cd android
          echo '#!/bin/bash' > run_gradlew.sh
          echo 'export PATH=/usr/bin:$PATH' >> run_gradlew.sh
          echo './gradlew "$@"' >> run_gradlew.sh
          chmod +x run_gradlew.sh
          
      - name: Build React Native app
        run: |
          cd android
          ./run_gradlew.sh assembleRelease

      - name: Archive APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk 
          path: android/app/build/outputs/apk/release/app-release.apk


      - name: Commit and push APK to repo
        env:
            PAT_TOKEN: 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
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git checkout -b apks # Ensure we're on a new branch
          mkdir -p ./apks # Create the directory if it doesn't exist
          cp android/app/build/outputs/apk/release/app-release.apk ./apks/app-release-$(date +'%Y%m%d%H%M%S').apk
          git add ./apks/
          git commit -m "Add APK from build ${{ github.run_id }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} apks
